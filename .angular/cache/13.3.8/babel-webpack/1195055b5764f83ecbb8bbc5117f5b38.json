{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Version = exports.VERSION = void 0;\n\nconst node_1 = require(\"@angular-devkit/core/node\");\n\nconst util_1 = require(\"util\");\n\nconst command_runner_1 = require(\"../../models/command-runner\");\n\nconst color_1 = require(\"../../utilities/color\");\n\nconst config_1 = require(\"../../utilities/config\");\n\nconst log_file_1 = require(\"../../utilities/log-file\");\n\nconst project_1 = require(\"../../utilities/project\");\n\nvar version_1 = require(\"../../models/version\");\n\nObject.defineProperty(exports, \"VERSION\", {\n  enumerable: true,\n  get: function () {\n    return version_1.VERSION;\n  }\n});\nObject.defineProperty(exports, \"Version\", {\n  enumerable: true,\n  get: function () {\n    return version_1.Version;\n  }\n});\nconst debugEnv = process.env['NG_DEBUG'];\nconst isDebug = debugEnv !== undefined && debugEnv !== '0' && debugEnv.toLowerCase() !== 'false';\n/* eslint-disable no-console */\n\nfunction default_1(_x) {\n  return _default_.apply(this, arguments);\n}\n\nfunction _default_() {\n  _default_ = _asyncToGenerator(function* (options) {\n    // This node version check ensures that the requirements of the project instance of the CLI are met\n    const version = process.versions.node.split('.').map(part => Number(part));\n\n    if (version[0] < 12 || version[0] === 12 && version[1] < 20) {\n      process.stderr.write(`Node.js version ${process.version} detected.\\n` + 'The Angular CLI requires a minimum v12.20.\\n\\n' + 'Please update your Node.js version or visit https://nodejs.org/ for additional instructions.\\n');\n      return 3;\n    }\n\n    const logger = (0, node_1.createConsoleLogger)(isDebug, process.stdout, process.stderr, {\n      info: s => color_1.colors.enabled ? s : (0, color_1.removeColor)(s),\n      debug: s => color_1.colors.enabled ? s : (0, color_1.removeColor)(s),\n      warn: s => color_1.colors.enabled ? color_1.colors.bold.yellow(s) : (0, color_1.removeColor)(s),\n      error: s => color_1.colors.enabled ? color_1.colors.bold.red(s) : (0, color_1.removeColor)(s),\n      fatal: s => color_1.colors.enabled ? color_1.colors.bold.red(s) : (0, color_1.removeColor)(s)\n    }); // Redirect console to logger\n\n    console.info = console.log = function (...args) {\n      logger.info((0, util_1.format)(...args));\n    };\n\n    console.warn = function (...args) {\n      logger.warn((0, util_1.format)(...args));\n    };\n\n    console.error = function (...args) {\n      logger.error((0, util_1.format)(...args));\n    };\n\n    let workspace;\n    const workspaceFile = (0, project_1.findWorkspaceFile)();\n\n    if (workspaceFile === null) {\n      const [, localPath] = (0, config_1.getWorkspaceRaw)('local');\n\n      if (localPath !== null) {\n        logger.fatal(`An invalid configuration file was found ['${localPath}'].` + ' Please delete the file before running the command.');\n        return 1;\n      }\n    } else {\n      try {\n        workspace = yield config_1.AngularWorkspace.load(workspaceFile);\n      } catch (e) {\n        logger.fatal(`Unable to read workspace file '${workspaceFile}': ${e.message}`);\n        return 1;\n      }\n    }\n\n    try {\n      const maybeExitCode = yield (0, command_runner_1.runCommand)(options.cliArgs, logger, workspace);\n\n      if (typeof maybeExitCode === 'number') {\n        console.assert(Number.isInteger(maybeExitCode));\n        return maybeExitCode;\n      }\n\n      return 0;\n    } catch (err) {\n      if (err instanceof Error) {\n        try {\n          const logPath = (0, log_file_1.writeErrorToLogFile)(err);\n          logger.fatal(`An unhandled exception occurred: ${err.message}\\n` + `See \"${logPath}\" for further details.`);\n        } catch (e) {\n          logger.fatal(`An unhandled exception occurred: ${err.message}\\n` + `Fatal error writing debug log file: ${e.message}`);\n\n          if (err.stack) {\n            logger.fatal(err.stack);\n          }\n        }\n\n        return 127;\n      } else if (typeof err === 'string') {\n        logger.fatal(err);\n      } else if (typeof err === 'number') {// Log nothing.\n      } else {\n        logger.fatal('An unexpected error occurred: ' + JSON.stringify(err));\n      }\n\n      if (options.testing) {\n        // eslint-disable-next-line no-debugger\n        debugger;\n        throw err;\n      }\n\n      return 1;\n    }\n  });\n  return _default_.apply(this, arguments);\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@angular/cli/lib/cli/index.js"],"names":["Object","defineProperty","exports","value","Version","VERSION","node_1","require","util_1","command_runner_1","color_1","config_1","log_file_1","project_1","version_1","enumerable","get","debugEnv","process","env","isDebug","undefined","toLowerCase","default_1","options","version","versions","node","split","map","part","Number","stderr","write","logger","createConsoleLogger","stdout","info","s","colors","enabled","removeColor","debug","warn","bold","yellow","error","red","fatal","console","log","args","format","workspace","workspaceFile","findWorkspaceFile","localPath","getWorkspaceRaw","AngularWorkspace","load","e","message","maybeExitCode","runCommand","cliArgs","assert","isInteger","err","Error","logPath","writeErrorToLogFile","stack","JSON","stringify","testing","default"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Version = exports.VERSION = void 0;\nconst node_1 = require(\"@angular-devkit/core/node\");\nconst util_1 = require(\"util\");\nconst command_runner_1 = require(\"../../models/command-runner\");\nconst color_1 = require(\"../../utilities/color\");\nconst config_1 = require(\"../../utilities/config\");\nconst log_file_1 = require(\"../../utilities/log-file\");\nconst project_1 = require(\"../../utilities/project\");\nvar version_1 = require(\"../../models/version\");\nObject.defineProperty(exports, \"VERSION\", { enumerable: true, get: function () { return version_1.VERSION; } });\nObject.defineProperty(exports, \"Version\", { enumerable: true, get: function () { return version_1.Version; } });\nconst debugEnv = process.env['NG_DEBUG'];\nconst isDebug = debugEnv !== undefined && debugEnv !== '0' && debugEnv.toLowerCase() !== 'false';\n/* eslint-disable no-console */\nasync function default_1(options) {\n    // This node version check ensures that the requirements of the project instance of the CLI are met\n    const version = process.versions.node.split('.').map((part) => Number(part));\n    if (version[0] < 12 || (version[0] === 12 && version[1] < 20)) {\n        process.stderr.write(`Node.js version ${process.version} detected.\\n` +\n            'The Angular CLI requires a minimum v12.20.\\n\\n' +\n            'Please update your Node.js version or visit https://nodejs.org/ for additional instructions.\\n');\n        return 3;\n    }\n    const logger = (0, node_1.createConsoleLogger)(isDebug, process.stdout, process.stderr, {\n        info: (s) => (color_1.colors.enabled ? s : (0, color_1.removeColor)(s)),\n        debug: (s) => (color_1.colors.enabled ? s : (0, color_1.removeColor)(s)),\n        warn: (s) => (color_1.colors.enabled ? color_1.colors.bold.yellow(s) : (0, color_1.removeColor)(s)),\n        error: (s) => (color_1.colors.enabled ? color_1.colors.bold.red(s) : (0, color_1.removeColor)(s)),\n        fatal: (s) => (color_1.colors.enabled ? color_1.colors.bold.red(s) : (0, color_1.removeColor)(s)),\n    });\n    // Redirect console to logger\n    console.info = console.log = function (...args) {\n        logger.info((0, util_1.format)(...args));\n    };\n    console.warn = function (...args) {\n        logger.warn((0, util_1.format)(...args));\n    };\n    console.error = function (...args) {\n        logger.error((0, util_1.format)(...args));\n    };\n    let workspace;\n    const workspaceFile = (0, project_1.findWorkspaceFile)();\n    if (workspaceFile === null) {\n        const [, localPath] = (0, config_1.getWorkspaceRaw)('local');\n        if (localPath !== null) {\n            logger.fatal(`An invalid configuration file was found ['${localPath}'].` +\n                ' Please delete the file before running the command.');\n            return 1;\n        }\n    }\n    else {\n        try {\n            workspace = await config_1.AngularWorkspace.load(workspaceFile);\n        }\n        catch (e) {\n            logger.fatal(`Unable to read workspace file '${workspaceFile}': ${e.message}`);\n            return 1;\n        }\n    }\n    try {\n        const maybeExitCode = await (0, command_runner_1.runCommand)(options.cliArgs, logger, workspace);\n        if (typeof maybeExitCode === 'number') {\n            console.assert(Number.isInteger(maybeExitCode));\n            return maybeExitCode;\n        }\n        return 0;\n    }\n    catch (err) {\n        if (err instanceof Error) {\n            try {\n                const logPath = (0, log_file_1.writeErrorToLogFile)(err);\n                logger.fatal(`An unhandled exception occurred: ${err.message}\\n` +\n                    `See \"${logPath}\" for further details.`);\n            }\n            catch (e) {\n                logger.fatal(`An unhandled exception occurred: ${err.message}\\n` +\n                    `Fatal error writing debug log file: ${e.message}`);\n                if (err.stack) {\n                    logger.fatal(err.stack);\n                }\n            }\n            return 127;\n        }\n        else if (typeof err === 'string') {\n            logger.fatal(err);\n        }\n        else if (typeof err === 'number') {\n            // Log nothing.\n        }\n        else {\n            logger.fatal('An unexpected error occurred: ' + JSON.stringify(err));\n        }\n        if (options.testing) {\n            // eslint-disable-next-line no-debugger\n            debugger;\n            throw err;\n        }\n        return 1;\n    }\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}