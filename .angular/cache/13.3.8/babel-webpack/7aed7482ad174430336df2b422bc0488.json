{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runCommand = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst fs_1 = require(\"fs\");\n\nconst path_1 = require(\"path\");\n\nconst json_file_1 = require(\"../utilities/json-file\");\n\nconst json_schema_1 = require(\"../utilities/json-schema\");\n\nconst analytics_1 = require(\"./analytics\");\n\nconst command_1 = require(\"./command\");\n\nconst parser = __importStar(require(\"./parser\")); // NOTE: Update commands.json if changing this.  It's still deep imported in one CI validation\n\n\nconst standardCommands = {\n  'add': '../commands/add.json',\n  'analytics': '../commands/analytics.json',\n  'build': '../commands/build.json',\n  'deploy': '../commands/deploy.json',\n  'config': '../commands/config.json',\n  'doc': '../commands/doc.json',\n  'e2e': '../commands/e2e.json',\n  'extract-i18n': '../commands/extract-i18n.json',\n  'make-this-awesome': '../commands/easter-egg.json',\n  'generate': '../commands/generate.json',\n  'help': '../commands/help.json',\n  'lint': '../commands/lint.json',\n  'new': '../commands/new.json',\n  'run': '../commands/run.json',\n  'serve': '../commands/serve.json',\n  'test': '../commands/test.json',\n  'update': '../commands/update.json',\n  'version': '../commands/version.json'\n};\n/**\n * Create the analytics instance.\n * @private\n */\n\nfunction _createAnalytics(_x) {\n  return _createAnalytics2.apply(this, arguments);\n}\n\nfunction _createAnalytics2() {\n  _createAnalytics2 = _asyncToGenerator(function* (workspace, skipPrompt = false) {\n    let config = yield (0, analytics_1.getGlobalAnalytics)(); // If in workspace and global analytics is enabled, defer to workspace level\n\n    if (workspace && config) {\n      const skipAnalytics = skipPrompt || process.env['NG_CLI_ANALYTICS'] && (process.env['NG_CLI_ANALYTICS'].toLowerCase() === 'false' || process.env['NG_CLI_ANALYTICS'] === '0'); // TODO: This should honor the `no-interactive` option.\n      //       It is currently not an `ng` option but rather only an option for specific commands.\n      //       The concept of `ng`-wide options are needed to cleanly handle this.\n\n      if (!skipAnalytics && !(yield (0, analytics_1.hasWorkspaceAnalyticsConfiguration)())) {\n        yield (0, analytics_1.promptProjectAnalytics)();\n      }\n\n      config = yield (0, analytics_1.getWorkspaceAnalytics)();\n    }\n\n    const maybeSharedAnalytics = yield (0, analytics_1.getSharedAnalytics)();\n\n    if (config && maybeSharedAnalytics) {\n      return new core_1.analytics.MultiAnalytics([config, maybeSharedAnalytics]);\n    } else if (config) {\n      return config;\n    } else if (maybeSharedAnalytics) {\n      return maybeSharedAnalytics;\n    } else {\n      return new core_1.analytics.NoopAnalytics();\n    }\n  });\n  return _createAnalytics2.apply(this, arguments);\n}\n\nfunction loadCommandDescription(_x2, _x3, _x4) {\n  return _loadCommandDescription.apply(this, arguments);\n}\n/**\n * Run a command.\n * @param args Raw unparsed arguments.\n * @param logger The logger to use.\n * @param workspace Workspace information.\n * @param commands The map of supported commands.\n * @param options Additional options.\n */\n\n\nfunction _loadCommandDescription() {\n  _loadCommandDescription = _asyncToGenerator(function* (name, path, registry) {\n    const schemaPath = (0, path_1.resolve)(__dirname, path);\n    const schema = (0, json_file_1.readAndParseJson)(schemaPath);\n\n    if (!(0, core_1.isJsonObject)(schema)) {\n      throw new Error('Invalid command JSON loaded from ' + JSON.stringify(schemaPath));\n    }\n\n    return (0, json_schema_1.parseJsonSchemaToCommandDescription)(name, schemaPath, registry, schema);\n  });\n  return _loadCommandDescription.apply(this, arguments);\n}\n\nfunction runCommand(_x5, _x6, _x7) {\n  return _runCommand.apply(this, arguments);\n}\n\nfunction _runCommand() {\n  _runCommand = _asyncToGenerator(function* (args, logger, workspace, commands = standardCommands, options = {\n    currentDirectory: process.cwd()\n  }) {\n    var _a; // This registry is exclusively used for flattening schemas, and not for validating.\n\n\n    const registry = new core_1.schema.CoreSchemaRegistry([]);\n    registry.registerUriHandler(uri => {\n      if (uri.startsWith('ng-cli://')) {\n        const content = (0, fs_1.readFileSync)((0, path_1.join)(__dirname, '..', uri.substr('ng-cli://'.length)), 'utf-8');\n        return Promise.resolve(JSON.parse(content));\n      } else {\n        return null;\n      }\n    });\n    let commandName = undefined;\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n\n      if (!arg.startsWith('-')) {\n        commandName = arg;\n        args.splice(i, 1);\n        break;\n      }\n    }\n\n    let description = null; // if no commands were found, use `help`.\n\n    if (!commandName) {\n      if (args.length === 1 && args[0] === '--version') {\n        commandName = 'version';\n      } else {\n        commandName = 'help';\n      }\n\n      if (!(commandName in commands)) {\n        logger.error(core_1.tags.stripIndent`\n          The \"${commandName}\" command seems to be disabled.\n          This is an issue with the CLI itself. If you see this comment, please report it and\n          provide your repository.\n        `);\n        return 1;\n      }\n    }\n\n    if (commandName in commands) {\n      description = yield loadCommandDescription(commandName, commands[commandName], registry);\n    } else {\n      const commandNames = Object.keys(commands); // Optimize loading for common aliases\n\n      if (commandName.length === 1) {\n        commandNames.sort((a, b) => {\n          const aMatch = a[0] === commandName;\n          const bMatch = b[0] === commandName;\n\n          if (aMatch && !bMatch) {\n            return -1;\n          } else if (!aMatch && bMatch) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      }\n\n      for (const name of commandNames) {\n        const aliasDesc = yield loadCommandDescription(name, commands[name], registry);\n        const aliases = aliasDesc.aliases;\n\n        if (aliases && aliases.some(alias => alias === commandName)) {\n          commandName = name;\n          description = aliasDesc;\n          break;\n        }\n      }\n    }\n\n    if (!description) {\n      const commandsDistance = {};\n      const name = commandName;\n      const allCommands = Object.keys(commands).sort((a, b) => {\n        if (!(a in commandsDistance)) {\n          commandsDistance[a] = core_1.strings.levenshtein(a, name);\n        }\n\n        if (!(b in commandsDistance)) {\n          commandsDistance[b] = core_1.strings.levenshtein(b, name);\n        }\n\n        return commandsDistance[a] - commandsDistance[b];\n      });\n      logger.error(core_1.tags.stripIndent`\n        The specified command (\"${commandName}\") is invalid. For a list of available options,\n        run \"ng help\".\n\n        Did you mean \"${allCommands[0]}\"?\n    `);\n      return 1;\n    }\n\n    try {\n      const parsedOptions = parser.parseArguments(args, description.options, logger);\n      command_1.Command.setCommandMap( /*#__PURE__*/_asyncToGenerator(function* () {\n        const map = {};\n\n        for (const [name, path] of Object.entries(commands)) {\n          map[name] = yield loadCommandDescription(name, path, registry);\n        }\n\n        return map;\n      }));\n      const analytics = options.analytics || (yield _createAnalytics(!!workspace, description.name === 'update'));\n      const context = {\n        workspace,\n        analytics,\n        currentDirectory: options.currentDirectory,\n        root: (_a = workspace === null || workspace === void 0 ? void 0 : workspace.basePath) !== null && _a !== void 0 ? _a : options.currentDirectory\n      };\n      const command = new description.impl(context, description, logger); // Flush on an interval (if the event loop is waiting).\n\n      let analyticsFlushPromise = Promise.resolve();\n      const analyticsFlushInterval = setInterval(() => {\n        analyticsFlushPromise = analyticsFlushPromise.then(() => analytics.flush());\n      }, 1000);\n      const result = yield command.validateAndRun(parsedOptions); // Flush one last time.\n\n      clearInterval(analyticsFlushInterval);\n      yield analyticsFlushPromise.then(() => analytics.flush());\n      return result;\n    } catch (e) {\n      if (e instanceof parser.ParseArgumentException) {\n        logger.fatal('Cannot parse arguments. See below for the reasons.');\n        logger.fatal('    ' + e.comments.join('\\n    '));\n        return 1;\n      } else {\n        throw e;\n      }\n    }\n  });\n  return _runCommand.apply(this, arguments);\n}\n\nexports.runCommand = runCommand;","map":{"version":3,"sources":["/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@angular/cli/models/command-runner.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","runCommand","core_1","require","fs_1","path_1","json_file_1","json_schema_1","analytics_1","command_1","parser","standardCommands","_createAnalytics","workspace","skipPrompt","config","getGlobalAnalytics","skipAnalytics","process","env","toLowerCase","hasWorkspaceAnalyticsConfiguration","promptProjectAnalytics","getWorkspaceAnalytics","maybeSharedAnalytics","getSharedAnalytics","analytics","MultiAnalytics","NoopAnalytics","loadCommandDescription","name","path","registry","schemaPath","resolve","__dirname","schema","readAndParseJson","isJsonObject","Error","JSON","stringify","parseJsonSchemaToCommandDescription","args","logger","commands","options","currentDirectory","cwd","_a","CoreSchemaRegistry","registerUriHandler","uri","startsWith","content","readFileSync","join","substr","length","Promise","parse","commandName","i","arg","splice","description","error","tags","stripIndent","commandNames","keys","sort","a","b","aMatch","bMatch","aliasDesc","aliases","some","alias","commandsDistance","allCommands","strings","levenshtein","parsedOptions","parseArguments","Command","setCommandMap","map","entries","context","root","basePath","command","impl","analyticsFlushPromise","analyticsFlushInterval","setInterval","then","flush","validateAndRun","clearInterval","e","ParseArgumentException","fatal","comments"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runCommand = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst json_file_1 = require(\"../utilities/json-file\");\nconst json_schema_1 = require(\"../utilities/json-schema\");\nconst analytics_1 = require(\"./analytics\");\nconst command_1 = require(\"./command\");\nconst parser = __importStar(require(\"./parser\"));\n// NOTE: Update commands.json if changing this.  It's still deep imported in one CI validation\nconst standardCommands = {\n    'add': '../commands/add.json',\n    'analytics': '../commands/analytics.json',\n    'build': '../commands/build.json',\n    'deploy': '../commands/deploy.json',\n    'config': '../commands/config.json',\n    'doc': '../commands/doc.json',\n    'e2e': '../commands/e2e.json',\n    'extract-i18n': '../commands/extract-i18n.json',\n    'make-this-awesome': '../commands/easter-egg.json',\n    'generate': '../commands/generate.json',\n    'help': '../commands/help.json',\n    'lint': '../commands/lint.json',\n    'new': '../commands/new.json',\n    'run': '../commands/run.json',\n    'serve': '../commands/serve.json',\n    'test': '../commands/test.json',\n    'update': '../commands/update.json',\n    'version': '../commands/version.json',\n};\n/**\n * Create the analytics instance.\n * @private\n */\nasync function _createAnalytics(workspace, skipPrompt = false) {\n    let config = await (0, analytics_1.getGlobalAnalytics)();\n    // If in workspace and global analytics is enabled, defer to workspace level\n    if (workspace && config) {\n        const skipAnalytics = skipPrompt ||\n            (process.env['NG_CLI_ANALYTICS'] &&\n                (process.env['NG_CLI_ANALYTICS'].toLowerCase() === 'false' ||\n                    process.env['NG_CLI_ANALYTICS'] === '0'));\n        // TODO: This should honor the `no-interactive` option.\n        //       It is currently not an `ng` option but rather only an option for specific commands.\n        //       The concept of `ng`-wide options are needed to cleanly handle this.\n        if (!skipAnalytics && !(await (0, analytics_1.hasWorkspaceAnalyticsConfiguration)())) {\n            await (0, analytics_1.promptProjectAnalytics)();\n        }\n        config = await (0, analytics_1.getWorkspaceAnalytics)();\n    }\n    const maybeSharedAnalytics = await (0, analytics_1.getSharedAnalytics)();\n    if (config && maybeSharedAnalytics) {\n        return new core_1.analytics.MultiAnalytics([config, maybeSharedAnalytics]);\n    }\n    else if (config) {\n        return config;\n    }\n    else if (maybeSharedAnalytics) {\n        return maybeSharedAnalytics;\n    }\n    else {\n        return new core_1.analytics.NoopAnalytics();\n    }\n}\nasync function loadCommandDescription(name, path, registry) {\n    const schemaPath = (0, path_1.resolve)(__dirname, path);\n    const schema = (0, json_file_1.readAndParseJson)(schemaPath);\n    if (!(0, core_1.isJsonObject)(schema)) {\n        throw new Error('Invalid command JSON loaded from ' + JSON.stringify(schemaPath));\n    }\n    return (0, json_schema_1.parseJsonSchemaToCommandDescription)(name, schemaPath, registry, schema);\n}\n/**\n * Run a command.\n * @param args Raw unparsed arguments.\n * @param logger The logger to use.\n * @param workspace Workspace information.\n * @param commands The map of supported commands.\n * @param options Additional options.\n */\nasync function runCommand(args, logger, workspace, commands = standardCommands, options = {\n    currentDirectory: process.cwd(),\n}) {\n    var _a;\n    // This registry is exclusively used for flattening schemas, and not for validating.\n    const registry = new core_1.schema.CoreSchemaRegistry([]);\n    registry.registerUriHandler((uri) => {\n        if (uri.startsWith('ng-cli://')) {\n            const content = (0, fs_1.readFileSync)((0, path_1.join)(__dirname, '..', uri.substr('ng-cli://'.length)), 'utf-8');\n            return Promise.resolve(JSON.parse(content));\n        }\n        else {\n            return null;\n        }\n    });\n    let commandName = undefined;\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (!arg.startsWith('-')) {\n            commandName = arg;\n            args.splice(i, 1);\n            break;\n        }\n    }\n    let description = null;\n    // if no commands were found, use `help`.\n    if (!commandName) {\n        if (args.length === 1 && args[0] === '--version') {\n            commandName = 'version';\n        }\n        else {\n            commandName = 'help';\n        }\n        if (!(commandName in commands)) {\n            logger.error(core_1.tags.stripIndent `\n          The \"${commandName}\" command seems to be disabled.\n          This is an issue with the CLI itself. If you see this comment, please report it and\n          provide your repository.\n        `);\n            return 1;\n        }\n    }\n    if (commandName in commands) {\n        description = await loadCommandDescription(commandName, commands[commandName], registry);\n    }\n    else {\n        const commandNames = Object.keys(commands);\n        // Optimize loading for common aliases\n        if (commandName.length === 1) {\n            commandNames.sort((a, b) => {\n                const aMatch = a[0] === commandName;\n                const bMatch = b[0] === commandName;\n                if (aMatch && !bMatch) {\n                    return -1;\n                }\n                else if (!aMatch && bMatch) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        }\n        for (const name of commandNames) {\n            const aliasDesc = await loadCommandDescription(name, commands[name], registry);\n            const aliases = aliasDesc.aliases;\n            if (aliases && aliases.some((alias) => alias === commandName)) {\n                commandName = name;\n                description = aliasDesc;\n                break;\n            }\n        }\n    }\n    if (!description) {\n        const commandsDistance = {};\n        const name = commandName;\n        const allCommands = Object.keys(commands).sort((a, b) => {\n            if (!(a in commandsDistance)) {\n                commandsDistance[a] = core_1.strings.levenshtein(a, name);\n            }\n            if (!(b in commandsDistance)) {\n                commandsDistance[b] = core_1.strings.levenshtein(b, name);\n            }\n            return commandsDistance[a] - commandsDistance[b];\n        });\n        logger.error(core_1.tags.stripIndent `\n        The specified command (\"${commandName}\") is invalid. For a list of available options,\n        run \"ng help\".\n\n        Did you mean \"${allCommands[0]}\"?\n    `);\n        return 1;\n    }\n    try {\n        const parsedOptions = parser.parseArguments(args, description.options, logger);\n        command_1.Command.setCommandMap(async () => {\n            const map = {};\n            for (const [name, path] of Object.entries(commands)) {\n                map[name] = await loadCommandDescription(name, path, registry);\n            }\n            return map;\n        });\n        const analytics = options.analytics || (await _createAnalytics(!!workspace, description.name === 'update'));\n        const context = {\n            workspace,\n            analytics,\n            currentDirectory: options.currentDirectory,\n            root: (_a = workspace === null || workspace === void 0 ? void 0 : workspace.basePath) !== null && _a !== void 0 ? _a : options.currentDirectory,\n        };\n        const command = new description.impl(context, description, logger);\n        // Flush on an interval (if the event loop is waiting).\n        let analyticsFlushPromise = Promise.resolve();\n        const analyticsFlushInterval = setInterval(() => {\n            analyticsFlushPromise = analyticsFlushPromise.then(() => analytics.flush());\n        }, 1000);\n        const result = await command.validateAndRun(parsedOptions);\n        // Flush one last time.\n        clearInterval(analyticsFlushInterval);\n        await analyticsFlushPromise.then(() => analytics.flush());\n        return result;\n    }\n    catch (e) {\n        if (e instanceof parser.ParseArgumentException) {\n            logger.fatal('Cannot parse arguments. See below for the reasons.');\n            logger.fatal('    ' + e.comments.join('\\n    '));\n            return 1;\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.runCommand = runCommand;\n"]},"metadata":{},"sourceType":"script"}