{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst child_process_1 = require(\"child_process\");\n\nconst path = __importStar(require(\"path\"));\n\nfunction default_1(factoryOptions = {}) {\n  const rootDirectory = factoryOptions.rootDirectory || process.cwd();\n  return /*#__PURE__*/_asyncToGenerator(function* (options = {}, context) {\n    const authorName = options.authorName;\n    const authorEmail = options.authorEmail;\n\n    const execute = (args, ignoreErrorStream) => {\n      const outputStream = 'ignore';\n      const errorStream = ignoreErrorStream ? 'ignore' : process.stderr;\n      const spawnOptions = {\n        stdio: [process.stdin, outputStream, errorStream],\n        shell: true,\n        cwd: path.join(rootDirectory, options.workingDirectory || ''),\n        env: { ...process.env,\n          ...(authorName ? {\n            GIT_AUTHOR_NAME: authorName,\n            GIT_COMMITTER_NAME: authorName\n          } : {}),\n          ...(authorEmail ? {\n            GIT_AUTHOR_EMAIL: authorEmail,\n            GIT_COMMITTER_EMAIL: authorEmail\n          } : {})\n        }\n      };\n      return new Promise((resolve, reject) => {\n        (0, child_process_1.spawn)('git', args, spawnOptions).on('close', code => {\n          if (code === 0) {\n            resolve();\n          } else {\n            reject(code);\n          }\n        });\n      });\n    };\n\n    const hasCommand = yield execute(['--version']).then(() => true, () => false);\n\n    if (!hasCommand) {\n      return;\n    }\n\n    const insideRepo = yield execute(['rev-parse', '--is-inside-work-tree'], true).then(() => true, () => false);\n\n    if (insideRepo) {\n      context.logger.info(core_1.tags.oneLine`\n        Directory is already under version control.\n        Skipping initialization of git.\n      `);\n      return;\n    } // if git is not found or an error was thrown during the `git`\n    // init process just swallow any errors here\n    // NOTE: This will be removed once task error handling is implemented\n\n\n    try {\n      yield execute(['init']);\n      yield execute(['add', '.']);\n\n      if (options.commit) {\n        const message = options.message || 'initial commit';\n        yield execute(['commit', `-m \"${message}\"`]);\n      }\n\n      context.logger.info('Successfully initialized git.');\n    } catch {}\n  });\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@angular-devkit/schematics/tasks/repo-init/executor.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","core_1","require","child_process_1","path","default_1","factoryOptions","rootDirectory","process","cwd","options","context","authorName","authorEmail","execute","args","ignoreErrorStream","outputStream","errorStream","stderr","spawnOptions","stdio","stdin","shell","join","workingDirectory","env","GIT_AUTHOR_NAME","GIT_COMMITTER_NAME","GIT_AUTHOR_EMAIL","GIT_COMMITTER_EMAIL","Promise","resolve","reject","spawn","on","code","hasCommand","then","insideRepo","logger","info","tags","oneLine","commit","message","default"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"@angular-devkit/core\");\nconst child_process_1 = require(\"child_process\");\nconst path = __importStar(require(\"path\"));\nfunction default_1(factoryOptions = {}) {\n    const rootDirectory = factoryOptions.rootDirectory || process.cwd();\n    return async (options = {}, context) => {\n        const authorName = options.authorName;\n        const authorEmail = options.authorEmail;\n        const execute = (args, ignoreErrorStream) => {\n            const outputStream = 'ignore';\n            const errorStream = ignoreErrorStream ? 'ignore' : process.stderr;\n            const spawnOptions = {\n                stdio: [process.stdin, outputStream, errorStream],\n                shell: true,\n                cwd: path.join(rootDirectory, options.workingDirectory || ''),\n                env: {\n                    ...process.env,\n                    ...(authorName ? { GIT_AUTHOR_NAME: authorName, GIT_COMMITTER_NAME: authorName } : {}),\n                    ...(authorEmail\n                        ? { GIT_AUTHOR_EMAIL: authorEmail, GIT_COMMITTER_EMAIL: authorEmail }\n                        : {}),\n                },\n            };\n            return new Promise((resolve, reject) => {\n                (0, child_process_1.spawn)('git', args, spawnOptions).on('close', (code) => {\n                    if (code === 0) {\n                        resolve();\n                    }\n                    else {\n                        reject(code);\n                    }\n                });\n            });\n        };\n        const hasCommand = await execute(['--version']).then(() => true, () => false);\n        if (!hasCommand) {\n            return;\n        }\n        const insideRepo = await execute(['rev-parse', '--is-inside-work-tree'], true).then(() => true, () => false);\n        if (insideRepo) {\n            context.logger.info(core_1.tags.oneLine `\n        Directory is already under version control.\n        Skipping initialization of git.\n      `);\n            return;\n        }\n        // if git is not found or an error was thrown during the `git`\n        // init process just swallow any errors here\n        // NOTE: This will be removed once task error handling is implemented\n        try {\n            await execute(['init']);\n            await execute(['add', '.']);\n            if (options.commit) {\n                const message = options.message || 'initial commit';\n                await execute(['commit', `-m \"${message}\"`]);\n            }\n            context.logger.info('Successfully initialized git.');\n        }\n        catch { }\n    };\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}