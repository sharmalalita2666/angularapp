{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeJsSyncHost = exports.NodeJsAsyncHost = void 0;\n\nconst fs_1 = __importStar(require(\"fs\"));\n\nconst path_1 = require(\"path\");\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst src_1 = require(\"../src\");\n\nfunction exists(_x) {\n  return _exists.apply(this, arguments);\n} // This will only be initialized if the watch() method is called.\n// Otherwise chokidar appears only in type positions, and shouldn't be referenced\n// in the JavaScript output.\n\n\nfunction _exists() {\n  _exists = _asyncToGenerator(function* (path) {\n    try {\n      yield fs_1.promises.access(path, fs_1.constants.F_OK);\n      return true;\n    } catch {\n      return false;\n    }\n  });\n  return _exists.apply(this, arguments);\n}\n\nlet FSWatcher;\n\nfunction loadFSWatcher() {\n  if (!FSWatcher) {\n    try {\n      // eslint-disable-next-line import/no-extraneous-dependencies\n      FSWatcher = require('chokidar').FSWatcher;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND') {\n        throw new Error('As of angular-devkit version 8.0, the \"chokidar\" package ' + 'must be installed in order to use watch() features.');\n      }\n\n      throw e;\n    }\n  }\n}\n/**\n * An implementation of the Virtual FS using Node as the background. There are two versions; one\n * synchronous and one asynchronous.\n */\n\n\nclass NodeJsAsyncHost {\n  get capabilities() {\n    return {\n      synchronous: false\n    };\n  }\n\n  write(path, content) {\n    return (0, rxjs_1.from)(fs_1.promises.mkdir((0, src_1.getSystemPath)((0, src_1.dirname)(path)), {\n      recursive: true\n    })).pipe((0, operators_1.mergeMap)(() => fs_1.promises.writeFile((0, src_1.getSystemPath)(path), new Uint8Array(content))));\n  }\n\n  read(path) {\n    return (0, rxjs_1.from)(fs_1.promises.readFile((0, src_1.getSystemPath)(path))).pipe((0, operators_1.map)(buffer => new Uint8Array(buffer).buffer));\n  }\n\n  delete(path) {\n    return this.isDirectory(path).pipe((0, operators_1.mergeMap)( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (isDirectory) {\n        if (isDirectory) {\n          // The below should be removed and replaced with just `rm` when support for Node.Js 12 is removed.\n          const {\n            rm,\n            rmdir\n          } = fs_1.promises;\n\n          if (rm) {\n            yield rm((0, src_1.getSystemPath)(path), {\n              force: true,\n              recursive: true,\n              maxRetries: 3\n            });\n          } else {\n            yield rmdir((0, src_1.getSystemPath)(path), {\n              recursive: true,\n              maxRetries: 3\n            });\n          }\n        } else {\n          yield fs_1.promises.unlink((0, src_1.getSystemPath)(path));\n        }\n      });\n\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n\n  rename(from, to) {\n    return (0, rxjs_1.from)(fs_1.promises.rename((0, src_1.getSystemPath)(from), (0, src_1.getSystemPath)(to)));\n  }\n\n  list(path) {\n    return (0, rxjs_1.from)(fs_1.promises.readdir((0, src_1.getSystemPath)(path))).pipe((0, operators_1.map)(names => names.map(name => (0, src_1.fragment)(name))));\n  }\n\n  exists(path) {\n    return (0, rxjs_1.from)(exists((0, src_1.getSystemPath)(path)));\n  }\n\n  isDirectory(path) {\n    return this.stat(path).pipe((0, operators_1.map)(stat => stat.isDirectory()));\n  }\n\n  isFile(path) {\n    return this.stat(path).pipe((0, operators_1.map)(stat => stat.isFile()));\n  } // Some hosts may not support stat.\n\n\n  stat(path) {\n    return (0, rxjs_1.from)(fs_1.promises.stat((0, src_1.getSystemPath)(path)));\n  } // Some hosts may not support watching.\n\n\n  watch(path, _options) {\n    return new rxjs_1.Observable(obs => {\n      loadFSWatcher();\n      const watcher = new FSWatcher({\n        persistent: true\n      });\n      watcher.add((0, src_1.getSystemPath)(path));\n      watcher.on('change', path => {\n        obs.next({\n          path: (0, src_1.normalize)(path),\n          time: new Date(),\n          type: 0\n          /* Changed */\n\n        });\n      }).on('add', path => {\n        obs.next({\n          path: (0, src_1.normalize)(path),\n          time: new Date(),\n          type: 1\n          /* Created */\n\n        });\n      }).on('unlink', path => {\n        obs.next({\n          path: (0, src_1.normalize)(path),\n          time: new Date(),\n          type: 2\n          /* Deleted */\n\n        });\n      });\n      return () => watcher.close();\n    }).pipe((0, operators_1.publish)(), (0, operators_1.refCount)());\n  }\n\n}\n\nexports.NodeJsAsyncHost = NodeJsAsyncHost;\n/**\n * An implementation of the Virtual FS using Node as the backend, synchronously.\n */\n\nclass NodeJsSyncHost {\n  get capabilities() {\n    return {\n      synchronous: true\n    };\n  }\n\n  write(path, content) {\n    return new rxjs_1.Observable(obs => {\n      (0, fs_1.mkdirSync)((0, src_1.getSystemPath)((0, src_1.dirname)(path)), {\n        recursive: true\n      });\n      (0, fs_1.writeFileSync)((0, src_1.getSystemPath)(path), new Uint8Array(content));\n      obs.next();\n      obs.complete();\n    });\n  }\n\n  read(path) {\n    return new rxjs_1.Observable(obs => {\n      const buffer = (0, fs_1.readFileSync)((0, src_1.getSystemPath)(path));\n      obs.next(new Uint8Array(buffer).buffer);\n      obs.complete();\n    });\n  }\n\n  delete(path) {\n    return this.isDirectory(path).pipe((0, operators_1.concatMap)(isDir => {\n      if (isDir) {\n        const dirPaths = (0, fs_1.readdirSync)((0, src_1.getSystemPath)(path));\n        const rmDirComplete = new rxjs_1.Observable(obs => {\n          // The below should be removed and replaced with just `rmSync` when support for Node.Js 12 is removed.\n          const {\n            rmSync,\n            rmdirSync\n          } = fs_1.default;\n\n          if (rmSync) {\n            rmSync((0, src_1.getSystemPath)(path), {\n              force: true,\n              recursive: true,\n              maxRetries: 3\n            });\n          } else {\n            rmdirSync((0, src_1.getSystemPath)(path), {\n              recursive: true,\n              maxRetries: 3\n            });\n          }\n\n          obs.complete();\n        });\n        return (0, rxjs_1.concat)(...dirPaths.map(name => this.delete((0, src_1.join)(path, name))), rmDirComplete);\n      } else {\n        try {\n          (0, fs_1.unlinkSync)((0, src_1.getSystemPath)(path));\n        } catch (err) {\n          return (0, rxjs_1.throwError)(err);\n        }\n\n        return (0, rxjs_1.of)(undefined);\n      }\n    }));\n  }\n\n  rename(from, to) {\n    return new rxjs_1.Observable(obs => {\n      const toSystemPath = (0, src_1.getSystemPath)(to);\n      (0, fs_1.mkdirSync)((0, path_1.dirname)(toSystemPath), {\n        recursive: true\n      });\n      (0, fs_1.renameSync)((0, src_1.getSystemPath)(from), toSystemPath);\n      obs.next();\n      obs.complete();\n    });\n  }\n\n  list(path) {\n    return new rxjs_1.Observable(obs => {\n      const names = (0, fs_1.readdirSync)((0, src_1.getSystemPath)(path));\n      obs.next(names.map(name => (0, src_1.fragment)(name)));\n      obs.complete();\n    });\n  }\n\n  exists(path) {\n    return new rxjs_1.Observable(obs => {\n      obs.next((0, fs_1.existsSync)((0, src_1.getSystemPath)(path)));\n      obs.complete();\n    });\n  }\n\n  isDirectory(path) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.stat(path).pipe((0, operators_1.map)(stat => stat.isDirectory()));\n  }\n\n  isFile(path) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.stat(path).pipe((0, operators_1.map)(stat => stat.isFile()));\n  } // Some hosts may not support stat.\n\n\n  stat(path) {\n    return new rxjs_1.Observable(obs => {\n      obs.next((0, fs_1.statSync)((0, src_1.getSystemPath)(path)));\n      obs.complete();\n    });\n  } // Some hosts may not support watching.\n\n\n  watch(path, _options) {\n    return new rxjs_1.Observable(obs => {\n      loadFSWatcher();\n      const watcher = new FSWatcher({\n        persistent: false\n      });\n      watcher.add((0, src_1.getSystemPath)(path));\n      watcher.on('change', path => {\n        obs.next({\n          path: (0, src_1.normalize)(path),\n          time: new Date(),\n          type: 0\n          /* Changed */\n\n        });\n      }).on('add', path => {\n        obs.next({\n          path: (0, src_1.normalize)(path),\n          time: new Date(),\n          type: 1\n          /* Created */\n\n        });\n      }).on('unlink', path => {\n        obs.next({\n          path: (0, src_1.normalize)(path),\n          time: new Date(),\n          type: 2\n          /* Deleted */\n\n        });\n      });\n      return () => watcher.close();\n    }).pipe((0, operators_1.publish)(), (0, operators_1.refCount)());\n  }\n\n}\n\nexports.NodeJsSyncHost = NodeJsSyncHost;","map":{"version":3,"sources":["/home/unthinkable-lap-0268/Documents/angularProject/node_modules/@angular-devkit/core/node/host.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","NodeJsSyncHost","NodeJsAsyncHost","fs_1","require","path_1","rxjs_1","operators_1","src_1","exists","path","promises","access","constants","F_OK","FSWatcher","loadFSWatcher","e","code","Error","capabilities","synchronous","write","content","from","mkdir","getSystemPath","dirname","recursive","pipe","mergeMap","writeFile","Uint8Array","read","readFile","map","buffer","delete","isDirectory","rm","rmdir","force","maxRetries","unlink","rename","to","list","readdir","names","name","fragment","stat","isFile","watch","_options","Observable","obs","watcher","persistent","add","on","next","normalize","time","Date","type","close","publish","refCount","mkdirSync","writeFileSync","complete","readFileSync","concatMap","isDir","dirPaths","readdirSync","rmDirComplete","rmSync","rmdirSync","default","concat","join","unlinkSync","err","throwError","of","toSystemPath","renameSync","existsSync","statSync"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeJsSyncHost = exports.NodeJsAsyncHost = void 0;\nconst fs_1 = __importStar(require(\"fs\"));\nconst path_1 = require(\"path\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst src_1 = require(\"../src\");\nasync function exists(path) {\n    try {\n        await fs_1.promises.access(path, fs_1.constants.F_OK);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n// This will only be initialized if the watch() method is called.\n// Otherwise chokidar appears only in type positions, and shouldn't be referenced\n// in the JavaScript output.\nlet FSWatcher;\nfunction loadFSWatcher() {\n    if (!FSWatcher) {\n        try {\n            // eslint-disable-next-line import/no-extraneous-dependencies\n            FSWatcher = require('chokidar').FSWatcher;\n        }\n        catch (e) {\n            if (e.code !== 'MODULE_NOT_FOUND') {\n                throw new Error('As of angular-devkit version 8.0, the \"chokidar\" package ' +\n                    'must be installed in order to use watch() features.');\n            }\n            throw e;\n        }\n    }\n}\n/**\n * An implementation of the Virtual FS using Node as the background. There are two versions; one\n * synchronous and one asynchronous.\n */\nclass NodeJsAsyncHost {\n    get capabilities() {\n        return { synchronous: false };\n    }\n    write(path, content) {\n        return (0, rxjs_1.from)(fs_1.promises.mkdir((0, src_1.getSystemPath)((0, src_1.dirname)(path)), { recursive: true })).pipe((0, operators_1.mergeMap)(() => fs_1.promises.writeFile((0, src_1.getSystemPath)(path), new Uint8Array(content))));\n    }\n    read(path) {\n        return (0, rxjs_1.from)(fs_1.promises.readFile((0, src_1.getSystemPath)(path))).pipe((0, operators_1.map)((buffer) => new Uint8Array(buffer).buffer));\n    }\n    delete(path) {\n        return this.isDirectory(path).pipe((0, operators_1.mergeMap)(async (isDirectory) => {\n            if (isDirectory) {\n                // The below should be removed and replaced with just `rm` when support for Node.Js 12 is removed.\n                const { rm, rmdir } = fs_1.promises;\n                if (rm) {\n                    await rm((0, src_1.getSystemPath)(path), { force: true, recursive: true, maxRetries: 3 });\n                }\n                else {\n                    await rmdir((0, src_1.getSystemPath)(path), { recursive: true, maxRetries: 3 });\n                }\n            }\n            else {\n                await fs_1.promises.unlink((0, src_1.getSystemPath)(path));\n            }\n        }));\n    }\n    rename(from, to) {\n        return (0, rxjs_1.from)(fs_1.promises.rename((0, src_1.getSystemPath)(from), (0, src_1.getSystemPath)(to)));\n    }\n    list(path) {\n        return (0, rxjs_1.from)(fs_1.promises.readdir((0, src_1.getSystemPath)(path))).pipe((0, operators_1.map)((names) => names.map((name) => (0, src_1.fragment)(name))));\n    }\n    exists(path) {\n        return (0, rxjs_1.from)(exists((0, src_1.getSystemPath)(path)));\n    }\n    isDirectory(path) {\n        return this.stat(path).pipe((0, operators_1.map)((stat) => stat.isDirectory()));\n    }\n    isFile(path) {\n        return this.stat(path).pipe((0, operators_1.map)((stat) => stat.isFile()));\n    }\n    // Some hosts may not support stat.\n    stat(path) {\n        return (0, rxjs_1.from)(fs_1.promises.stat((0, src_1.getSystemPath)(path)));\n    }\n    // Some hosts may not support watching.\n    watch(path, _options) {\n        return new rxjs_1.Observable((obs) => {\n            loadFSWatcher();\n            const watcher = new FSWatcher({ persistent: true });\n            watcher.add((0, src_1.getSystemPath)(path));\n            watcher\n                .on('change', (path) => {\n                obs.next({\n                    path: (0, src_1.normalize)(path),\n                    time: new Date(),\n                    type: 0 /* Changed */,\n                });\n            })\n                .on('add', (path) => {\n                obs.next({\n                    path: (0, src_1.normalize)(path),\n                    time: new Date(),\n                    type: 1 /* Created */,\n                });\n            })\n                .on('unlink', (path) => {\n                obs.next({\n                    path: (0, src_1.normalize)(path),\n                    time: new Date(),\n                    type: 2 /* Deleted */,\n                });\n            });\n            return () => watcher.close();\n        }).pipe((0, operators_1.publish)(), (0, operators_1.refCount)());\n    }\n}\nexports.NodeJsAsyncHost = NodeJsAsyncHost;\n/**\n * An implementation of the Virtual FS using Node as the backend, synchronously.\n */\nclass NodeJsSyncHost {\n    get capabilities() {\n        return { synchronous: true };\n    }\n    write(path, content) {\n        return new rxjs_1.Observable((obs) => {\n            (0, fs_1.mkdirSync)((0, src_1.getSystemPath)((0, src_1.dirname)(path)), { recursive: true });\n            (0, fs_1.writeFileSync)((0, src_1.getSystemPath)(path), new Uint8Array(content));\n            obs.next();\n            obs.complete();\n        });\n    }\n    read(path) {\n        return new rxjs_1.Observable((obs) => {\n            const buffer = (0, fs_1.readFileSync)((0, src_1.getSystemPath)(path));\n            obs.next(new Uint8Array(buffer).buffer);\n            obs.complete();\n        });\n    }\n    delete(path) {\n        return this.isDirectory(path).pipe((0, operators_1.concatMap)((isDir) => {\n            if (isDir) {\n                const dirPaths = (0, fs_1.readdirSync)((0, src_1.getSystemPath)(path));\n                const rmDirComplete = new rxjs_1.Observable((obs) => {\n                    // The below should be removed and replaced with just `rmSync` when support for Node.Js 12 is removed.\n                    const { rmSync, rmdirSync } = fs_1.default;\n                    if (rmSync) {\n                        rmSync((0, src_1.getSystemPath)(path), { force: true, recursive: true, maxRetries: 3 });\n                    }\n                    else {\n                        rmdirSync((0, src_1.getSystemPath)(path), { recursive: true, maxRetries: 3 });\n                    }\n                    obs.complete();\n                });\n                return (0, rxjs_1.concat)(...dirPaths.map((name) => this.delete((0, src_1.join)(path, name))), rmDirComplete);\n            }\n            else {\n                try {\n                    (0, fs_1.unlinkSync)((0, src_1.getSystemPath)(path));\n                }\n                catch (err) {\n                    return (0, rxjs_1.throwError)(err);\n                }\n                return (0, rxjs_1.of)(undefined);\n            }\n        }));\n    }\n    rename(from, to) {\n        return new rxjs_1.Observable((obs) => {\n            const toSystemPath = (0, src_1.getSystemPath)(to);\n            (0, fs_1.mkdirSync)((0, path_1.dirname)(toSystemPath), { recursive: true });\n            (0, fs_1.renameSync)((0, src_1.getSystemPath)(from), toSystemPath);\n            obs.next();\n            obs.complete();\n        });\n    }\n    list(path) {\n        return new rxjs_1.Observable((obs) => {\n            const names = (0, fs_1.readdirSync)((0, src_1.getSystemPath)(path));\n            obs.next(names.map((name) => (0, src_1.fragment)(name)));\n            obs.complete();\n        });\n    }\n    exists(path) {\n        return new rxjs_1.Observable((obs) => {\n            obs.next((0, fs_1.existsSync)((0, src_1.getSystemPath)(path)));\n            obs.complete();\n        });\n    }\n    isDirectory(path) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.stat(path).pipe((0, operators_1.map)((stat) => stat.isDirectory()));\n    }\n    isFile(path) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.stat(path).pipe((0, operators_1.map)((stat) => stat.isFile()));\n    }\n    // Some hosts may not support stat.\n    stat(path) {\n        return new rxjs_1.Observable((obs) => {\n            obs.next((0, fs_1.statSync)((0, src_1.getSystemPath)(path)));\n            obs.complete();\n        });\n    }\n    // Some hosts may not support watching.\n    watch(path, _options) {\n        return new rxjs_1.Observable((obs) => {\n            loadFSWatcher();\n            const watcher = new FSWatcher({ persistent: false });\n            watcher.add((0, src_1.getSystemPath)(path));\n            watcher\n                .on('change', (path) => {\n                obs.next({\n                    path: (0, src_1.normalize)(path),\n                    time: new Date(),\n                    type: 0 /* Changed */,\n                });\n            })\n                .on('add', (path) => {\n                obs.next({\n                    path: (0, src_1.normalize)(path),\n                    time: new Date(),\n                    type: 1 /* Created */,\n                });\n            })\n                .on('unlink', (path) => {\n                obs.next({\n                    path: (0, src_1.normalize)(path),\n                    time: new Date(),\n                    type: 2 /* Deleted */,\n                });\n            });\n            return () => watcher.close();\n        }).pipe((0, operators_1.publish)(), (0, operators_1.refCount)());\n    }\n}\nexports.NodeJsSyncHost = NodeJsSyncHost;\n"]},"metadata":{},"sourceType":"script"}